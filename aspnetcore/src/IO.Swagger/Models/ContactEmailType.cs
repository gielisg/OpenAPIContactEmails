/*
 * Contact Emails
 *
 * Manages the emails used to contact a Contact.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: gielisg@selectsoftware.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ContactEmailType : IEquatable<ContactEmailType>
    { 
        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="Code")]
        public string Code { get; set; }

        /// <summary>
        /// Name of the Contact Email Type.
        /// </summary>
        /// <value>Name of the Contact Email Type.</value>
        [DataMember(Name="Name")]
        public string Name { get; set; }

        /// <summary>
        /// The Datetime the entity was created in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.
        /// </summary>
        /// <value>The Datetime the entity was created in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.</value>
        [DataMember(Name="Created")]
        public DateTime? Created { get; set; }

        /// <summary>
        /// The user who created this entity. This is automatically updated by the database, data passed to the API in this property will be ignored.
        /// </summary>
        /// <value>The user who created this entity. This is automatically updated by the database, data passed to the API in this property will be ignored.</value>
        [DataMember(Name="CreatedBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// The date and time the object was last updated in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.
        /// </summary>
        /// <value>The date and time the object was last updated in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.</value>
        [DataMember(Name="LastUpdated")]
        public DateTime? LastUpdated { get; set; }

        /// <summary>
        /// The user who performed the last update in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.
        /// </summary>
        /// <value>The user who performed the last update in the database. This is automatically updated by the database, data passed to the API in this property will be ignored.</value>
        [DataMember(Name="UpdatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContactEmailType {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  UpdatedBy: ").Append(UpdatedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ContactEmailType)obj);
        }

        /// <summary>
        /// Returns true if ContactEmailType instances are equal
        /// </summary>
        /// <param name="other">Instance of ContactEmailType to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContactEmailType other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Code == other.Code ||
                    Code != null &&
                    Code.Equals(other.Code)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Created == other.Created ||
                    Created != null &&
                    Created.Equals(other.Created)
                ) && 
                (
                    CreatedBy == other.CreatedBy ||
                    CreatedBy != null &&
                    CreatedBy.Equals(other.CreatedBy)
                ) && 
                (
                    LastUpdated == other.LastUpdated ||
                    LastUpdated != null &&
                    LastUpdated.Equals(other.LastUpdated)
                ) && 
                (
                    UpdatedBy == other.UpdatedBy ||
                    UpdatedBy != null &&
                    UpdatedBy.Equals(other.UpdatedBy)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Code != null)
                    hashCode = hashCode * 59 + Code.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (Created != null)
                    hashCode = hashCode * 59 + Created.GetHashCode();
                    if (CreatedBy != null)
                    hashCode = hashCode * 59 + CreatedBy.GetHashCode();
                    if (LastUpdated != null)
                    hashCode = hashCode * 59 + LastUpdated.GetHashCode();
                    if (UpdatedBy != null)
                    hashCode = hashCode * 59 + UpdatedBy.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ContactEmailType left, ContactEmailType right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ContactEmailType left, ContactEmailType right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
